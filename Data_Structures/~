#include <stdio.h>
#include <stdlib.h>

typedef enum{false, true}bool;

typedef struct node
{
	int value;
	struct node* left;
	struct node* right;
}Node;

Node* createNode(int vlaue)
{
	Node* n = (Node*)malloc(sizeof(Node));

	n->value = value;
	n->left = NULL;
	n->right = NULL;

	return n;
}

bool addTree(Node** root, Node* node)
{
	if((*root) == NULL)
	{
		(*root) = node;
	}
	else if((*root)->left == NULL)
	{
		(*root)->left = node;
	}
	else if((*root)->right == NULL)
	{
		(*root)->right = node;
	}
	else
	{
		return false;
	}
	return true;
}

bool searchTree(Node* root, int 

void printTree(Node* root)
{
	printf("Root's value: %c\n", root->value);
	printf("value of Root's left Node: %c\n", root->left->value);
	printf("vlaue of Root's rightNode: %c\n", root->right->value);
}

int main()
{
	Node* root = NULL;

	addTree(&root, createNode(10));

	addTree(&root, createNode(5));

	addTree(&root, createNode(11));

	printTree(root);
		
/*
	printf("Value of Root node : %c \n", root->value);
	
	root->left = createNode('B');
	printf("Value of LeftRoot Node : %c\n", root->left->value);
	
	root->right = createNode('c');
	printf("Value of RightRoot Node : %c\n", root->right->value);
*/
}

